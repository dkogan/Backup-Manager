From: Dima Kogan <dima@secretsauce.net>
Date: Thu, 26 Nov 2015 13:12:20 -0800
Subject: Fixed up the dar tests

- The incremental and non-incremental tests now have a very similar structure to
  each other

- Directory names are now in variables (not hard-coded) as much as possible

- Non-incremental test now backs up a test/ subdirectory. dar barfs otherwise
  and the test fails

- Incremental test now searches for the correct backup result. It was looking
  for the wrong file, which made it barf
---
 t/t07-dar.sh                     | 15 +++++++++++----
 t/t12-tarball-incremental-dar.sh | 37 ++++++++++++++++++++++++-------------
 2 files changed, 35 insertions(+), 17 deletions(-)

diff --git a/t/t07-dar.sh b/t/t07-dar.sh
index 639389a..a9aa17c 100644
--- a/t/t07-dar.sh
+++ b/t/t07-dar.sh
@@ -1,5 +1,4 @@
-#! /usr/bin/env bash
-
+#!/bin/sh
 set -e
 
 # Each test script should include testlib.sh
@@ -14,9 +13,11 @@ source testlib.sh
 source confs/base.conf
 source confs/tarball.conf
 
+export TEST_FILES_SUBDIR=test
+
 export BM_ARCHIVE_ROOT="repository"
 export BM_ARCHIVE_METHOD="tarball-incremental"
-export BM_TARBALL_DIRECTORIES="$PWD"
+export BM_TARBALL_DIRECTORIES="$PWD/$TEST_FILES_SUBDIR"
 export BM_TARBALL_FILETYPE="dar"
 export BM_TARBALLINC_MASTERDATETYPE="weekly"
 export BM_TARBALLINC_MASTERDATEVALUE="1"
@@ -29,6 +30,12 @@ if [[ ! -x $dar ]]; then
 fi
 
 # The test actions
+
+rm -rf $TEST_FILES_SUBDIR
+mkdir -p $TEST_FILES_SUBDIR
+mkdir $TEST_FILES_SUBDIR/dir1
+touch $TEST_FILES_SUBDIR/file1
+
 if [[ -e $BM_ARCHIVE_ROOT ]]; then
     rm -f $BM_ARCHIVE_ROOT/*
 fi    
@@ -38,7 +45,7 @@ bm_init_today
 create_directories
 make_archives
 
-name=$(get_dir_name $PWD long)
+name=$(get_dir_name $BM_TARBALL_DIRECTORIES long)
 if [[ -e "$BM_ARCHIVE_ROOT/$BM_ARCHIVE_PREFIX$name.$TODAY.master.1.dar" ]]; then
     rm -rf $BM_ARCHIVE_ROOT
     exit 0
diff --git a/t/t12-tarball-incremental-dar.sh b/t/t12-tarball-incremental-dar.sh
index d3ef26b..e917e6f 100644
--- a/t/t12-tarball-incremental-dar.sh
+++ b/t/t12-tarball-incremental-dar.sh
@@ -3,6 +3,7 @@ set -e
 
 # Each test script should include testlib.sh
 source testlib.sh
+
 # When the test is ready, set this to false for nice outputs.
 # if you want to see what happens, use those flags
 # verbose="true"
@@ -12,21 +13,29 @@ source testlib.sh
 source confs/base.conf
 source confs/tarball.conf
 
+export TEST_FILES_SUBDIR=test
+
 export BM_ARCHIVE_ROOT="repository"
 export BM_ARCHIVE_METHOD="tarball-incremental"
-export BM_TARBALL_DIRECTORIES="$PWD/test"
+export BM_TARBALL_DIRECTORIES="$PWD/$TEST_FILES_SUBDIR"
 export BM_TARBALL_FILETYPE="dar"
 export BM_TARBALLINC_MASTERDATETYPE="weekly"
 # This test is for incremental backups, we don't want master backups!
 export BM_TARBALLINC_MASTERDATEVALUE="999"
+
 source $locallib/sanitize.sh
 
+if [[ ! -x $dar ]]; then
+    info "cannot run test, need $dar"
+    exit 1
+fi
+
 # The test actions
 
-rm -rf test
-mkdir -p test
-mkdir test/dir1
-touch test/file1
+rm -rf $TEST_FILES_SUBDIR
+mkdir -p $TEST_FILES_SUBDIR
+mkdir $TEST_FILES_SUBDIR/dir1
+touch $TEST_FILES_SUBDIR/file1
 
 if [[ -e $BM_ARCHIVE_ROOT ]]; then
     rm -f $BM_ARCHIVE_ROOT/*
@@ -37,31 +46,33 @@ bm_init_today
 create_directories
 make_archives
 
-YESTERDAY=$(date +%Y%m%d --date '1 days ago')
+name=$(get_dir_name $BM_TARBALL_DIRECTORIES long)
+
 
-name=$(get_dir_name "$PWD/test" long)
 if [[ -e "$BM_ARCHIVE_ROOT/$BM_ARCHIVE_PREFIX$name.$TODAY.master.1.dar" ]]; then
+    YESTERDAY=$(date +%Y%m%d --date '1 days ago')
+
     mv "$BM_ARCHIVE_ROOT/$BM_ARCHIVE_PREFIX$name.$TODAY.master.1.dar" "$BM_ARCHIVE_ROOT/$BM_ARCHIVE_PREFIX$name.$YESTERDAY.master.1.dar"
-    mkdir test/dir2
-    touch test/file2
+    mkdir $TEST_FILES_SUBDIR/dir2
+    touch $TEST_FILES_SUBDIR/file2
     make_archives
 
     # Now make sure file2 and dir2 are not saved in last darball
     for file in file1 dir1 
     do
-        saved=$(dar -l $BM_ARCHIVE_ROOT/$BM_ARCHIVE_PREFIX$name.$TODAY.master | grep $file | awk '{print $1}')
+        saved=$(dar -l $BM_ARCHIVE_ROOT/$BM_ARCHIVE_PREFIX$name.$YESTERDAY.master | grep $file | awk '{print $1}')
         if [[ "$saved" == "[saved]" ]]; then
             warning "$file is saved in last archive, shouldn't."
-            rm -rf $PWD/test
+            rm -rf $BM_TARBALL_DIRECTORIES
             rm -rf repository
             exit 1
         fi
     done
-    rm -rf $PWD/test
+    rm -rf $BM_TARBALL_DIRECTORIES
     rm -rf repository
     exit 0
 else
-    rm -rf $PWD/test
+    rm -rf $BM_TARBALL_DIRECTORIES
     rm -rf repository
     exit 1
 fi        
